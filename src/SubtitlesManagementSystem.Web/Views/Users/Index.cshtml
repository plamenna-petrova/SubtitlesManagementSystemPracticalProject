@model PaginatedList<SubtitlesManagementSystem.Web.Models.Users.AllUsersViewModel>

<section class="meetings-page" style="min-height: 100vh;">
    <div class="container">
        @if (TempData["UserSuccessMessage"] != null)
        {
            <div class="alert alert-success mb-3" role="alert">
                @TempData["UsersSuccessMessage"]
            </div>
        }

        @if (TempData["UserInvalidOperationErrorMessage"] != null)
        {
            <div class="alert alert-danger mb-3" role="alert">
                @TempData["UserInvalidOperationErrorMessage"]
            </div>
        }

        <div class="row">
            <form asp-action="Index" method="get" class="mt-3">
                <div class="form-actions no-color">
                    <p>
                        <input type="text" name="SearchTerm" class="search-term-input"
                               value="@ViewData["UserSearchFilter"]" />
                        <input type="submit" value="Search" class="btn btn-success" />
                        <a asp-action="Index" class="btn btn-primary">Reset</a>
                    </p>
                </div>
            </form>

            <table class="table table-bordered table-dark table-striped table-hover mt-3">
                <thead class="thead-light">
                    <tr class="text-center">
                        <th>
                            <a asp-action="Index" class="sorting-link"
                               asp-route-sortOrder="@ViewData["UserNameSort"]"
                               asp-route-currentFilter="@ViewData["UserSearchFilter"]">
                                @Html.DisplayNameFor(User => User.ViewModel.Username)
                            </a>
                        </th>
                        <th>
                            Roles
                        </th>
                        <th>
                            Actions
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr class="text-center">
                            <td>
                                @Html.DisplayFor(UserModelItem => user.Username)
                            </td>
                            <td>
                                <ul>
                                    @if (user.Roles.Count() > 0)
                                    {
                                        @foreach (var role in user.Roles)
                                        {
                                            <li>@role</li>
                                        }
                                    }
                                </ul>
                            </td>
                            <td>
                                @if ((int)user.PromotionStatus == 1)
                                {
                                    <a asp-controller="Users" asp-action="Promote" asp-route-id="@user.Id" class="btn btn-light">Promote</a>
                                    <a class="btn btn-primary" asp-controller="Users" asp-action="DeclinePromotion" asp-route-id="@user.Id" class="btn btn-light">Decline Promotion</a>
                                }
                                @if (user.Roles[0] == EditorRoleName || user.Roles[0] == UploaderRoleName)
                                {
                                    <a asp-controller="Users" asp-action="Demote" asp-route-id="@user.Id" class="btn btn-light">Demote</a>
                                }
                                <a asp-action="Delete" asp-route-id="@user.Id" class="btn btn-danger">Delete</a>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>

            <div class="row justify-content-between">
                <div class="col-5">
                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex - 1)"
                       asp-route-pageSize="@ViewData["CurrentPageSize"]"
                       asp-route-currentFilter="@ViewData["UserSearchFilter"]"
                       class="btn btn-light @(!Model.HasPreviousPage ? "disabled" : "")">
                        Previous
                    </a>

                    @for (int pageIndex = 1; pageIndex <= @Model.TotalPages; pageIndex++)
                    {
                        <a class="btn @(Model.PageIndex == pageIndex ? "btn-dark text-light" : "btn-light")"
                           asp-action="Index"
                           asp-route-sortOrder="@ViewData["CurrentSort"]"
                           asp-route-currentFilter="@ViewData["UserSearchFilter"]"
                           asp-route-pageSize="@ViewData["CurrentPageSize"]"
                           asp-route-pageNumber="@pageIndex">
                            @pageIndex
                        </a>
                    }

                    <a asp-action="Index"
                       asp-route-sortOrder="@ViewData["CurrentSort"]"
                       asp-route-pageNumber="@(Model.PageIndex + 1)"
                       asp-route-pageSize="@ViewData["CurrentPageSize"]"
                       asp-route-currentFilter="@ViewData["UserSearchFilter"]"
                       class="btn btn-light @(!Model.HasNextPage ? "disabled" : "")">
                        Next
                    </a>
                </div>
            </div>
        </div>
    </div>
</section>